{"version":3,"sources":["components/layout/layout.module.scss","modules/posts/components/posts-page.module.scss","modules/posts/components/post-card.module.scss","routing/router-path.ts","common/stores/layout-store.ts","services/index.tsx","modules/posts/post-service.ts","modules/posts/post-store.ts","modules/authors/author-service.ts","modules/authors/author-store.ts","common/stores/main-store.ts","common/hooks/use-stores.tsx","components/layout/index.tsx","modules/authors/components/author-select.tsx","common/constants.ts","modules/posts/components/edit-post.tsx","modules/posts/components/post-card.tsx","modules/posts/components/posts-page.tsx","components/custom-date-picker/index.tsx","modules/authors/components/edit-author.tsx","modules/authors/components/author-columns.tsx","modules/authors/components/authors-page.tsx","routing/empty-route.tsx","routing/route-manager.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","RouterPath","pages","posts","id","name","path","POSTS","icon","FileOutlined","authors","AUTHORS","UserOutlined","LayoutStore","collapsed","setCollapsed","makeAutoObservable","this","axiosInstance","axios","create","baseURL","process","proxy","PostService","getAll","author","a","get","headers","data","idAuthor","post","delete","PostStore","mainStore","setErrorFromAxios","AuthorService","AuthorStore","getErrorMessage","error","messages","response","message","Array","isArray","join","errorParser","storesContext","createContext","layout","setError","console","warn","clearError","useStores","useContext","Content","AntLayout","Sider","Layout","observer","children","title","subtitle","className","rest","location","useLocation","navigate","useNavigate","pageKey","pathname","slice","page","locale","ptBR","classes","Page","collapsible","onCollapse","Logo","theme","selectedKeys","mode","Object","values","map","Icon","Item","onClick","subTitle","visible","onOk","onCancel","AuthorSelect","onChange","useState","isLoading","setIsLoading","options","setOptions","useEffect","cancel","authorsResult","label","nickname","value","getAuthors","loading","defaultProTableProps","rowKey","pagination","showQuickJumper","dateFormatter","search","formLayout","labelCol","span","wrapperCol","formTailLayout","offset","requiredRule","required","TextArea","Input","EditPost","onSubmit","isModalVisible","setIsModalVisible","isInserting","setIsInserting","Form","useForm","form","onFinish","valuefieldsValues","body","type","resetFields","PlusOutlined","footer","rules","htmlType","PostCard","creationDate","authorName","authorNickname","deletePost","extra","Date","toLocaleDateString","actions","onConfirm","placement","DeleteOutlined","size","danger","Search","Posts","needReload","setNeedReload","authorSearch","setAuthorSearch","postList","setPostList","getPosts","useCallback","then","postsResult","requestNewPost","PostsPage","dataSource","header","HeaderInputWrapper","placeholder","onSearch","enterButton","allowClear","disabled","length","HeaderButtonsWrapper","shape","ReloadOutlined","renderItem","CustomDatePicker","props","format","EditAuthor","birthDate","baseAuthorColumns","dataIndex","key","renderText","text","Authors","actionRef","useRef","requestAuthors","success","requestNewAuthor","current","reload","deleteAuthor","columns","useMemo","concat","render","_","row","getAuthorColumns","headerTitle","request","toolBarRender","EmptyRoute","RouteManager","basename","index","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eea4189.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"layout_Page__12juo\",\"Logo\":\"layout_Logo__2Aspl\",\"Content\":\"layout_Content__1sn_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostsPage\":\"posts-page_PostsPage__2_w5s\",\"HeaderInputWrapper\":\"posts-page_HeaderInputWrapper__30096\",\"HeaderButtonsWrapper\":\"posts-page_HeaderButtonsWrapper__1f2zY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostCard\":\"post-card_PostCard__3tLfu\"};","import { ExoticComponent } from 'react';\nimport { FileOutlined, UserOutlined } from '@ant-design/icons';\n\nexport enum RouterPath {\n\tHOME = '/',\n\tPOSTS = '/posts',\n\tAUTHORS = '/authors'\n}\n\nexport interface IPage {\n\tid: string;\n\tname: string;\n\tpath: string;\n\ticon: ExoticComponent;\n}\n\nexport interface IPages {\n\tposts: IPage;\n\tauthors: IPage;\n}\n\nexport const pages: IPages = {\n\tposts: {\n\t\tid: 'posts',\n\t\tname: 'Postagens',\n\t\tpath: RouterPath.POSTS,\n\t\ticon: FileOutlined\n\t},\n\tauthors: {\n\t\tid: 'authors',\n\t\tname: 'Autores',\n\t\tpath: RouterPath.AUTHORS,\n\t\ticon: UserOutlined\n\t}\n};\n","import { makeAutoObservable } from 'mobx';\n\nexport default class LayoutStore {\n\tcollapsed = false;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\t}\n\n\tsetCollapsed = (collapsed: boolean): void => {\n\t\tthis.collapsed = collapsed;\n\t};\n}\n","import axios from 'axios';\n\nexport const axiosInstance = axios.create({\n\tbaseURL: process.env.REACT_APP_API_URL,\n\tproxy: false\n});\n","import { axiosInstance } from 'services';\nimport { IAddPostRequestDTO, IPost } from './interfaces/post.interface';\n\nexport default class PostService {\n\tstatic getAll = async (author: string): Promise<Array<IPost>> => {\n\t\tconst { data } = await axiosInstance.get(`/posts${author ? `?authorName=${author}` : ''}`, {\n\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t});\n\t\treturn data as Array<IPost>;\n\t};\n\n\tstatic create = async (idAuthor: string, post: IAddPostRequestDTO): Promise<IPost> => {\n\t\tconst { data } = await axiosInstance.post(`/authors/${idAuthor}/posts`, post, {\n\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t});\n\t\treturn data as IPost;\n\t};\n\n\tstatic delete = async (id: string): Promise<void> => {\n\t\tawait axiosInstance.delete(`/posts/${id}`);\n\t};\n}\n","import { makeAutoObservable } from 'mobx';\nimport MainStore from 'common/stores/main-store';\nimport { IAddPostRequestDTO, IPost } from './interfaces/post.interface';\nimport PostService from './post-service';\n\nexport default class PostStore {\n\tmainStore: MainStore;\n\n\tconstructor(mainStore: MainStore) {\n\t\tmakeAutoObservable(this, { mainStore: false });\n\t\tthis.mainStore = mainStore;\n\t}\n\n\tgetAll = async (author: string): Promise<Array<IPost>> => {\n\t\ttry {\n\t\t\treturn await PostService.getAll(author);\n\t\t} catch (e) {\n\t\t\tthis.mainStore.setErrorFromAxios(e);\n\t\t\treturn [];\n\t\t}\n\t};\n\n\tcreate = async (idAuthor: string, post: IAddPostRequestDTO): Promise<IPost | null> => {\n\t\ttry {\n\t\t\treturn await PostService.create(idAuthor, post);\n\t\t} catch (e) {\n\t\t\tthis.mainStore.setErrorFromAxios(e);\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tdelete = async (id: string): Promise<void> => {\n\t\ttry {\n\t\t\tawait PostService.delete(id);\n\t\t} catch (e) {\n\t\t\tthis.mainStore.setErrorFromAxios(e);\n\t\t}\n\t};\n}\n","import { IAddAuthorRequestDTO, IAuthor } from 'modules/authors/interfaces/author.interface';\nimport { axiosInstance } from 'services';\n\nexport default class AuthorService {\n\tstatic getAll = async (): Promise<Array<IAuthor>> => {\n\t\tconst { data } = await axiosInstance.get('/authors', {\n\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t});\n\t\treturn data as Array<IAuthor>;\n\t};\n\n\tstatic create = async (author: IAddAuthorRequestDTO): Promise<IAuthor> => {\n\t\tconst { data } = await axiosInstance.post('/authors', author, {\n\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t});\n\t\treturn data as IAuthor;\n\t};\n\n\tstatic delete = async (id: string): Promise<void> => {\n\t\tawait axiosInstance.delete(`/authors/${id}`);\n\t};\n}\n","import { makeAutoObservable } from 'mobx';\nimport MainStore from 'common/stores/main-store';\nimport AuthorService from './author-service';\nimport { IAddAuthorRequestDTO, IAuthor } from './interfaces/author.interface';\n\nexport default class AuthorStore {\n\tmainStore: MainStore;\n\n\tconstructor(mainStore: MainStore) {\n\t\tmakeAutoObservable(this, { mainStore: false });\n\t\tthis.mainStore = mainStore;\n\t}\n\n\tgetAll = async (): Promise<Array<IAuthor>> => {\n\t\ttry {\n\t\t\treturn await AuthorService.getAll();\n\t\t} catch (e) {\n\t\t\tthis.mainStore.setErrorFromAxios(e);\n\t\t\treturn [];\n\t\t}\n\t};\n\n\tcreate = async (author: IAddAuthorRequestDTO): Promise<IAuthor | null> => {\n\t\ttry {\n\t\t\treturn await AuthorService.create(author);\n\t\t} catch (e) {\n\t\t\tthis.mainStore.setErrorFromAxios(e);\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tdelete = async (id: string): Promise<void> => {\n\t\ttry {\n\t\t\tawait AuthorService.delete(id);\n\t\t} catch (e) {\n\t\t\tthis.mainStore.setErrorFromAxios(e);\n\t\t}\n\t};\n}\n","import { makeAutoObservable } from 'mobx';\nimport LayoutStore from './layout-store';\nimport PostStore from 'modules/posts/post-store';\nimport AuthorStore from 'modules/authors/author-store';\n\nexport default class MainStore {\n\terror: string | null = null;\n\n\tlayout: LayoutStore;\n\n\tauthors: AuthorStore;\n\tposts: PostStore;\n\n\tconstructor() {\n\t\tthis.layout = new LayoutStore();\n\t\tthis.authors = new AuthorStore(this);\n\t\tthis.posts = new PostStore(this);\n\t\tmakeAutoObservable(this, { authors: false, posts: false });\n\t}\n\n\tsetError = (error: string | null): void => {\n\t\tthis.error = error;\n\t};\n\n\tsetErrorFromAxios = (error: unknown): void => {\n\t\tconsole.warn(error);\n\t\tthis.error = getErrorMessage(error);\n\t};\n\n\tclearError = (): void => {\n\t\tthis.error = null;\n\t};\n}\n\ninterface IGenericError {\n\tresponse?: {\n\t\tdata: { message: string | string[] };\n\t};\n\tmessage?: string | string[];\n}\n\nconst errorParser = (error: IGenericError): string => {\n\tconst messages = error?.response?.data?.message || error?.message;\n\tif (Array.isArray(messages)) {\n\t\treturn messages.join(' ');\n\t}\n\treturn '' + messages;\n};\n\nconst getErrorMessage = (error: unknown): string => {\n\treturn errorParser(error as IGenericError) || 'Não foi possível realizar a solicitação';\n};\n","import { createContext, useContext } from 'react';\nimport MainStore from 'common/stores/main-store';\n\nconst storesContext = createContext<MainStore>(new MainStore());\n\nconst useStores = (): MainStore => useContext(storesContext);\n\nexport default useStores;\n","import { ReactNode } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Layout as AntLayout, PageHeader, Menu, Modal } from 'antd';\nimport { ConfigProvider } from 'antd';\nimport ptBR from 'antd/es/locale/pt_BR';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { pages, IPages, IPage } from 'routing/router-path';\nimport useStores from 'common/hooks/use-stores';\nimport classes from './layout.module.scss';\n\nconst { Content, Sider } = AntLayout;\n\nconst _Layout = ({\n\tchildren,\n\ttitle,\n\tsubtitle,\n\tclassName,\n\t...rest\n}: {\n\tchildren?: ReactNode;\n\ttitle?: string;\n\tsubtitle?: string;\n\tclassName?: string;\n}) => {\n\tconst location = useLocation();\n\tconst navigate = useNavigate();\n\tconst {\n\t\terror,\n\t\tclearError,\n\t\tlayout: { collapsed, setCollapsed }\n\t} = useStores();\n\tconst pageKey = (location.pathname || '').slice(1) as keyof IPages;\n\tconst page: IPage = pages[pageKey] || {};\n\n\treturn (\n\t\t<ConfigProvider locale={ptBR}>\n\t\t\t<AntLayout className={`${classes.Page} ${className}`} {...rest}>\n\t\t\t\t<Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n\t\t\t\t\t<div className={classes.Logo} />\n\t\t\t\t\t<Menu theme=\"dark\" selectedKeys={[page.id]} mode=\"inline\">\n\t\t\t\t\t\t{Object.values(pages).map(({ id, icon: Icon, path, name }: IPage) => (\n\t\t\t\t\t\t\t<Menu.Item key={id} icon={<Icon />} onClick={() => navigate(path)}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<AntLayout>\n\t\t\t\t\t<PageHeader title={title} subTitle={subtitle}>\n\t\t\t\t\t\t<Modal title=\"Basic Modal\" visible={!!error} onOk={clearError} onCancel={clearError}>\n\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t<Content className={classes.Content}>{children}</Content>\n\t\t\t\t\t</PageHeader>\n\t\t\t\t</AntLayout>\n\t\t\t</AntLayout>\n\t\t</ConfigProvider>\n\t);\n};\n\nconst Layout = observer(_Layout);\n\nexport default Layout;\n","import { useEffect, useState } from 'react';\nimport { Select } from 'antd';\nimport { observer } from 'mobx-react-lite';\nimport useStores from 'common/hooks/use-stores';\n\ninterface Option {\n\tlabel: string;\n\tvalue: string;\n}\n\nconst _AuthorSelect = ({ onChange, ...rest }: { onChange?: (authorId: string) => void }) => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [options, setOptions] = useState<Option[]>([]);\n\tconst {\n\t\tauthors: { getAll }\n\t} = useStores();\n\n\tuseEffect(() => {\n\t\tlet cancel = false;\n\t\tsetIsLoading(true);\n\t\tconst getAuthors = async () => {\n\t\t\tconst authorsResult = await getAll();\n\t\t\tif (!cancel) {\n\t\t\t\tsetOptions(\n\t\t\t\t\tauthorsResult.map((author) => ({ label: `${author.name} (${author.nickname})`, value: author.id }))\n\t\t\t\t);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\t\tgetAuthors();\n\t\treturn () => {\n\t\t\tcancel = true;\n\t\t};\n\t}, [getAll]);\n\n\treturn <Select loading={isLoading} {...rest} options={options} onChange={onChange} />;\n};\n\nconst AuthorSelect = observer(_AuthorSelect);\n\nexport default AuthorSelect;\n","import { SearchConfig } from '@ant-design/pro-table/lib/components/Form/FormRender';\n\ntype DateFormatter = false | 'string' | 'number' | undefined;\ntype Search = false | SearchConfig | undefined;\n\nexport const defaultProTableProps = {\n\trowKey: 'key',\n\tpagination: {\n\t\tshowQuickJumper: true\n\t},\n\tdateFormatter: 'string' as DateFormatter,\n\tsearch: false as Search\n};\n\nexport const formLayout = {\n\tlabelCol: { span: 8 },\n\twrapperCol: { span: 16 }\n};\n\nexport const formTailLayout = {\n\twrapperCol: { offset: 8, span: 16 }\n};\n\nexport const requiredRule = [{ required: true }];\n","import { useState } from 'react';\nimport { Form, Input, Button, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { IAddPostRequestDTO } from '../interfaces/post.interface';\nimport AuthorSelect from 'modules/authors/components/author-select';\nimport { formLayout, formTailLayout, requiredRule } from 'common/constants';\n\nconst { TextArea } = Input;\n\nconst EditPost = ({\n\tonSubmit,\n\tclassName,\n\t...rest\n}: {\n\tonSubmit: (idAuthor: string, post: IAddPostRequestDTO) => Promise<void>;\n\tclassName?: string;\n}) => {\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\n\tconst [isInserting, setIsInserting] = useState(false);\n\tconst [form] = Form.useForm();\n\n\tconst onFinish = async (valuefieldsValues: any) => {\n\t\tsetIsInserting(true);\n\t\tconst values = { title: valuefieldsValues.title, body: valuefieldsValues.body };\n\t\tawait onSubmit(valuefieldsValues.author, values);\n\t\tsetIsInserting(false);\n\t\tsetIsModalVisible(false);\n\t};\n\n\tconst onReset = () => {\n\t\tform.resetFields();\n\t};\n\n\tconst openModal = () => {\n\t\tform.resetFields();\n\t\tsetIsInserting(false);\n\t\tsetIsModalVisible(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button type=\"primary\" onClick={openModal} icon={<PlusOutlined />} className={className} {...rest}>\n\t\t\t\tNovo\n\t\t\t</Button>\n\t\t\t<Modal\n\t\t\t\ttitle=\"Nova Postagem\"\n\t\t\t\tvisible={isModalVisible}\n\t\t\t\tfooter={null}\n\t\t\t\tonCancel={() => setIsModalVisible(false)}\n\t\t\t>\n\t\t\t\t<Form {...formLayout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n\t\t\t\t\t<Form.Item name=\"title\" label=\"Título\" rules={requiredRule}>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item name=\"body\" label=\"Texto\" rules={requiredRule}>\n\t\t\t\t\t\t<TextArea />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item name=\"author\" label=\"Autor\" rules={requiredRule}>\n\t\t\t\t\t\t<AuthorSelect />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item {...formTailLayout}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={isInserting}>\n\t\t\t\t\t\t\tCriar\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button htmlType=\"button\" onClick={onReset}>\n\t\t\t\t\t\t\tLimpar\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default EditPost;\n","import { Card, Popconfirm, Tooltip, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport classes from './post-card.module.scss';\n\nconst PostCard = ({\n\tid,\n\ttitle,\n\tbody,\n\tcreationDate,\n\tauthorName,\n\tauthorNickname,\n\tdeletePost,\n\tclassName,\n\t...rest\n}: {\n\tid: string;\n\ttitle: string;\n\tbody: string;\n\tcreationDate: string;\n\tauthorName: String;\n\tauthorNickname: String;\n\tdeletePost: (id: string) => Promise<void>;\n\tclassName?: string;\n}) => (\n\t<Card\n\t\t{...rest}\n\t\tclassName={`${classes.PostCard} ${className}`}\n\t\ttitle={title}\n\t\textra={\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\tAutor: {authorName} ({authorNickname})\n\t\t\t\t</div>\n\t\t\t\t<div>Data: {new Date(creationDate).toLocaleDateString()}</div>\n\t\t\t</>\n\t\t}\n\t\tactions={[\n\t\t\t<Popconfirm title=\"Title\" onConfirm={() => deletePost(id)}>\n\t\t\t\t<Tooltip title=\"Apagar\" placement=\"bottom\">\n\t\t\t\t\t<Button type=\"primary\" icon={<DeleteOutlined />} size=\"small\" danger>\n\t\t\t\t\t\tApagar\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t</Popconfirm>\n\t\t]}\n\t>\n\t\t{body}\n\t</Card>\n);\n\nexport default PostCard;\n","import { useCallback, useEffect, useState } from 'react';\nimport { List, Button, Input } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { observer } from 'mobx-react-lite';\nimport Layout from 'components/layout';\nimport useStores from 'common/hooks/use-stores';\nimport EditPost from './edit-post';\nimport { IAddPostRequestDTO, IPost } from '../interfaces/post.interface';\nimport PostCard from './post-card';\nimport classes from './posts-page.module.scss';\n\nconst { Search } = Input;\n\nconst _Posts = () => {\n\tconst { posts } = useStores();\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [needReload, setNeedReload] = useState(true);\n\tconst [authorSearch, setAuthorSearch] = useState('');\n\tconst [postList, setPostList] = useState<Array<IPost>>([]);\n\n\tconst onSearch = (value: string) => {\n\t\tsetAuthorSearch(value);\n\t\tsetNeedReload(true);\n\t};\n\n\tconst getPosts = useCallback(async () => await posts.getAll(authorSearch), [posts, authorSearch]);\n\n\tuseEffect(() => {\n\t\tlet cancel = false;\n\t\tif (needReload) {\n\t\t\tsetIsLoading(true);\n\t\t\tgetPosts().then((postsResult) => {\n\t\t\t\tif (!cancel) {\n\t\t\t\t\tsetPostList(postsResult);\n\t\t\t\t\tsetNeedReload(false);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn () => {\n\t\t\tcancel = true;\n\t\t};\n\t}, [needReload, getPosts]);\n\n\tconst requestNewPost = useCallback(\n\t\tasync (idAuthor: string, post: IAddPostRequestDTO) => {\n\t\t\tawait posts.create(idAuthor, post);\n\t\t\tsetNeedReload(true);\n\t\t},\n\t\t[posts]\n\t);\n\n\tconst deletePost = useCallback(\n\t\tasync (id: string) => {\n\t\t\tawait posts.delete(id);\n\t\t\tsetNeedReload(true);\n\t\t},\n\t\t[posts]\n\t);\n\n\treturn (\n\t\t<Layout title=\"Postagens\" className={classes.PostsPage}>\n\t\t\t<List\n\t\t\t\tloading={isLoading}\n\t\t\t\tsize=\"small\"\n\t\t\t\tdataSource={postList}\n\t\t\t\theader={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={classes.HeaderInputWrapper}>\n\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\tplaceholder=\"Busque por autor\"\n\t\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\t\tenterButton\n\t\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\t\tdisabled={!authorSearch && postList.length === 0}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.HeaderButtonsWrapper}>\n\t\t\t\t\t\t\t<EditPost onSubmit={requestNewPost} />\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\t\t\t\tsize=\"middle\"\n\t\t\t\t\t\t\t\ticon={<ReloadOutlined />}\n\t\t\t\t\t\t\t\tloading={isLoading}\n\t\t\t\t\t\t\t\tonClick={() => setNeedReload(true)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\trenderItem={({ id, title, body, creationDate, author }) => (\n\t\t\t\t\t<PostCard\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tbody={body}\n\t\t\t\t\t\tcreationDate={creationDate}\n\t\t\t\t\t\tauthorName={author.name}\n\t\t\t\t\t\tauthorNickname={author.nickname}\n\t\t\t\t\t\tdeletePost={deletePost}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n\nconst Posts = observer(_Posts);\n\nexport default Posts;\n","import { DatePicker } from 'antd';\n\nconst CustomDatePicker = (props: any) => <DatePicker format=\"DD/MM/YYYY\" {...props} />;\n\nexport default CustomDatePicker;\n","import { useState } from 'react';\nimport { Form, Input, Button, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { IAddAuthorRequestDTO } from '../interfaces/author.interface';\nimport CustomDatePicker from 'components/custom-date-picker';\nimport { formLayout, formTailLayout, requiredRule } from 'common/constants';\n\nconst EditAuthor = ({\n\tonSubmit,\n\tclassName,\n\t...rest\n}: {\n\tonSubmit: (values: IAddAuthorRequestDTO) => Promise<void>;\n\tclassName?: string;\n}) => {\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\n\tconst [isInserting, setIsInserting] = useState(false);\n\tconst [form] = Form.useForm();\n\n\tconst onFinish = async (valuefieldsValues: any) => {\n\t\tsetIsInserting(true);\n\t\tlet values = valuefieldsValues;\n\t\tvalues = { ...values, birthDate: values.birthDate.format('YYYY-MM-DD') };\n\t\tawait onSubmit(values);\n\t\tsetIsInserting(false);\n\t\tsetIsModalVisible(false);\n\t};\n\n\tconst onReset = () => {\n\t\tform.resetFields();\n\t};\n\n\tconst openModal = () => {\n\t\tform.resetFields();\n\t\tsetIsInserting(false);\n\t\tsetIsModalVisible(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button type=\"primary\" onClick={openModal} icon={<PlusOutlined />} className={className} {...rest}>\n\t\t\t\tNovo\n\t\t\t</Button>\n\t\t\t<Modal title=\"Novo Author\" visible={isModalVisible} footer={null} onCancel={() => setIsModalVisible(false)}>\n\t\t\t\t<Form {...formLayout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n\t\t\t\t\t<Form.Item name=\"name\" label=\"Nome\" rules={requiredRule}>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item name=\"nickname\" label=\"Apelido\" rules={requiredRule}>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item name=\"birthDate\" label=\"Data de Nascimento\" rules={requiredRule}>\n\t\t\t\t\t\t<CustomDatePicker />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item {...formTailLayout}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={isInserting}>\n\t\t\t\t\t\t\tCriar\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button htmlType=\"button\" onClick={onReset}>\n\t\t\t\t\t\t\tLimpar\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default EditAuthor;\n","import { Tooltip, Button, Popconfirm } from 'antd';\nimport { ProColumns } from '@ant-design/pro-table';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst baseAuthorColumns: Array<ProColumns> = [\n\t{\n\t\ttitle: 'Nome',\n\t\tdataIndex: 'name',\n\t\tkey: 'name',\n\t\tsearch: false\n\t},\n\t{\n\t\ttitle: 'Apelido',\n\t\tdataIndex: 'nickname',\n\t\tkey: 'nickname',\n\t\tsearch: false\n\t},\n\t{\n\t\ttitle: 'Data de Nascimento',\n\t\tdataIndex: 'birthDate',\n\t\tkey: 'birthDate',\n\t\tsearch: false,\n\t\trenderText: (text) => new Date(text).toLocaleDateString()\n\t}\n];\n\nexport const getAuthorColumns = (deleteAuthor: (id: string) => Promise<void>): Array<ProColumns> =>\n\tbaseAuthorColumns.concat({\n\t\ttitle: 'Ações',\n\t\tkey: 'actions',\n\t\trender: (_, row) => [\n\t\t\t<div className=\"cell-button-group\" key=\"bg\">\n\t\t\t\t<Popconfirm title=\"Title\" onConfirm={() => deleteAuthor(row.id)}>\n\t\t\t\t\t<Tooltip title=\"Apagar\" placement=\"bottom\">\n\t\t\t\t\t\t<Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} size=\"small\" danger />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Popconfirm>\n\t\t\t</div>\n\t\t]\n\t});\n","import { useCallback, useMemo, useRef } from 'react';\nimport ProTable from '@ant-design/pro-table';\nimport type { ActionType } from '@ant-design/pro-table';\nimport { observer } from 'mobx-react-lite';\nimport Layout from 'components/layout';\nimport useStores from 'common/hooks/use-stores';\nimport { IAddAuthorRequestDTO } from '../interfaces/author.interface';\nimport EditAuthor from './edit-author';\nimport { getAuthorColumns } from './author-columns';\nimport { defaultProTableProps } from 'common/constants';\n\nconst _Authors = () => {\n\tconst { authors } = useStores();\n\tconst actionRef = useRef<ActionType>();\n\n\tconst requestAuthors = useCallback(async () => {\n\t\tconst authorsResult = await authors.getAll();\n\t\treturn {\n\t\t\tdata: authorsResult,\n\t\t\tsuccess: true\n\t\t};\n\t}, [authors]);\n\n\tconst requestNewAuthor = useCallback(\n\t\tasync (values: IAddAuthorRequestDTO) => {\n\t\t\tawait authors.create(values);\n\t\t\tactionRef?.current?.reload();\n\t\t},\n\t\t[authors]\n\t);\n\n\tconst deleteAuthor = useCallback(\n\t\tasync (id: string) => {\n\t\t\tawait authors.delete(id);\n\t\t\tactionRef?.current?.reload();\n\t\t},\n\t\t[authors]\n\t);\n\n\tconst columns = useMemo(() => getAuthorColumns(deleteAuthor), [deleteAuthor]);\n\n\treturn (\n\t\t<Layout title=\"Autores\">\n\t\t\t<ProTable\n\t\t\t\t{...defaultProTableProps}\n\t\t\t\tactionRef={actionRef}\n\t\t\t\theaderTitle=\"Autores\"\n\t\t\t\trowKey=\"id\"\n\t\t\t\trequest={requestAuthors}\n\t\t\t\tcolumns={columns}\n\t\t\t\ttoolBarRender={() => [<EditAuthor onSubmit={requestNewAuthor} key=\"ea\" />]}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n\nconst Authors = observer(_Authors);\n\nexport default Authors;\n","import Layout from 'components/layout';\n\nexport const EmptyRoute = (): JSX.Element => <Layout title=\"Página não encontrada\" />;\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Posts from 'modules/posts/components/posts-page';\nimport Authors from 'modules/authors/components/authors-page';\nimport { RouterPath } from './router-path';\nimport { EmptyRoute } from './empty-route';\n\nexport const RouteManager = (): JSX.Element => (\n\t<Router basename={process.env.PUBLIC_URL}>\n\t\t<Routes>\n\t\t\t<Route index element={<Posts />} />\n\t\t\t<Route path={RouterPath.POSTS} element={<Posts />} />\n\t\t\t<Route path={RouterPath.AUTHORS} element={<Authors />} />\n\t\t\t<Route path=\"*\" element={<EmptyRoute />} />\n\t\t</Routes>\n\t</Router>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles.ts';\nimport { RouteManager } from 'routing/route-manager';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RouteManager />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}